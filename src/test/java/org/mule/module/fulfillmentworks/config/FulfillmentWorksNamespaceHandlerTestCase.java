/**
 * This file was automatically generated by the Mule Cloud Connector Development Kit
 */
package org.mule.module.fulfillmentworks.config;

import com.fulfillmentworks.api.Order;
import org.mule.api.MuleEvent;
import org.mule.api.MuleMessage;
import org.mule.api.construct.FlowConstruct;
import org.mule.construct.Flow;
import org.mule.module.fulfillmentworks.OfferSearch;
import org.mule.tck.FunctionalTestCase;
import org.mule.transport.NullPayload;

import java.util.ArrayList;
import java.util.List;


public class FulfillmentWorksNamespaceHandlerTestCase extends FunctionalTestCase
{
    @Override
    protected String getConfigResources()
    {
        return"fulfillmentworks-namespace-config.xml";
    }

    /*public void testSendMessageToFlow()throws Exception
    {
    *//*
        This test case tests your Mule integration.

        To test your flow directly (i.e. without any inbound endpoints, declare a flow in
        fulfillmentworks-namespace-config.xml and put the element from your
        cloud connector's namespace that you want to test into it.
        A proper example was put into fulfillmentworks-namespace-config.xml

        Now you can send data to your test flow from the unit test:

        String payload = <your input to the flow here>;
        SimpleFlowConstruct flow = lookupFlowConstruct("theFlow");
        MuleEvent event = getTestEvent(payload);
        MuleEvent responseEvent = flow.process(event);
        assertEquals(<expected test output>, responseEvent.getMessage().getPayloadAsString());
    *//*
    }*/

    private Flow lookupFlow(String name)
    {
        return (Flow) muleContext.getRegistry().lookupFlowConstruct(name);
    }

    //Since the SOAP client is for all intents and purposes mocked for this test,
    //it is functional only
    public void testSendMessageToCreateOrderFlow()throws Exception
    {
        Order order = new Order();
        List<Order> orders = new ArrayList<Order>();
        orders.add(order);

        Flow flow = lookupFlow("addOrder");
        MuleEvent event = getTestEvent(orders);
        MuleEvent responseEvent = flow.process(event);
        MuleMessage msg = responseEvent.getMessage();
        assertFalse(msg.getPayload() instanceof NullPayload);
    }

    //Since the SOAP client is for all intents and purposes mocked for this test,
    //it is functional only
    public void testSendMessageToGetOffersFlow()throws Exception
    {
        OfferSearch offerSearch = new OfferSearch().setSearchString("NotARealSearchString");

        Flow flow = lookupFlow("getOffers");
        MuleEvent event = getTestEvent(offerSearch);
        MuleEvent responseEvent = flow.process(event);
        MuleMessage msg = responseEvent.getMessage();
        assertNotNull(msg);
        assertFalse(msg.getPayload() instanceof NullPayload);
    }

    //Since the SOAP client is for all intents and purposes mocked for this test,
    //it is functional only
    //This is not used currently and the test is broken
//    public void testSendMessageToGetOrderStatus()throws Exception
//    {
//        String payload = "Order%";
//        SimpleFlowConstruct flow = lookupFlowConstruct("getOrderStatus");
//        MuleEvent event = getTestEvent(payload);
//        MuleEvent responseEvent = flow.process(event);
//        MuleMessage msg = responseEvent.getMessage();
//        assertFalse(msg.getPayload() instanceof NullPayload);
//    }
}
